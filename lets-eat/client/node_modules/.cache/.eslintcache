[{"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/index.js":"1","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/App.js":"2","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/PrivateRoute.js":"3","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Landingpage/LandingPage.js":"4","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Login/Login.js":"5","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/SignUp/SignUp.js":"6","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/ProfilePage/ProfilePage.js":"7","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/contexts/AuthContext.js":"8","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Search/Search.js":"9","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Landingpage/SearchBar/SearchBar.js":"10","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Landingpage/TopNav/TopNav.js":"11","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/firebaseDB/firebase.js":"12"},{"size":447,"mtime":1621028415920,"results":"13","hashOfConfig":"14"},{"size":875,"mtime":1621028415920,"results":"15","hashOfConfig":"14"},{"size":463,"mtime":1621028415920,"results":"16","hashOfConfig":"14"},{"size":1110,"mtime":1621028415920,"results":"17","hashOfConfig":"14"},{"size":1872,"mtime":1621028415920,"results":"18","hashOfConfig":"14"},{"size":2601,"mtime":1621129932960,"results":"19","hashOfConfig":"14"},{"size":4207,"mtime":1621122790260,"results":"20","hashOfConfig":"14"},{"size":1484,"mtime":1621130134030,"results":"21","hashOfConfig":"14"},{"size":4491,"mtime":1621198870680,"results":"22","hashOfConfig":"14"},{"size":6648,"mtime":1621028415920,"results":"23","hashOfConfig":"14"},{"size":1466,"mtime":1621028415920,"results":"24","hashOfConfig":"14"},{"size":622,"mtime":1621028415920,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"17s7t8p",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/index.js",[],["52","53"],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/App.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/PrivateRoute.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Landingpage/LandingPage.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Login/Login.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/SignUp/SignUp.js",["54","55"],"import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport TopNav from \"../Landingpage/TopNav/TopNav\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport firebase from '../firebaseDB/firebase';\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const { signup, currentUser } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await signup(emailRef.current.value, passwordRef.current.value)\r\n      history.push(\"/\");\r\n    } catch {\r\n      setError(\"Failed to sign up\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TopNav></TopNav>\r\n      <Container className=\"mt-5\">\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"username\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control id=\"username\"></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" ref={emailRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password-confirm\">\r\n                <Form.Label>Password Confirmation</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  ref={passwordConfirmRef}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                Sign Up\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Already have an account? <Link to=\"/login\">Login</Link>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/ProfilePage/ProfilePage.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/contexts/AuthContext.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Search/Search.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Landingpage/SearchBar/SearchBar.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Landingpage/TopNav/TopNav.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/firebaseDB/firebase.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":6,"column":8,"nodeType":"62","messageId":"63","endLine":6,"endColumn":16},{"ruleId":"60","severity":1,"message":"64","line":12,"column":19,"nodeType":"62","messageId":"63","endLine":12,"endColumn":30},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'currentUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]