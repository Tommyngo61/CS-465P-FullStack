[{"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/index.js":"1","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/App.js":"2","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/PrivateRoute.js":"3","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/contexts/AuthContext.js":"4","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Landingpage/LandingPage.js":"5","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/SignUp/SignUp.js":"6","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Login/Login.js":"7","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Search/Search.js":"8","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/ProfilePage/ProfilePage.js":"9","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/firebaseDB/firebase.js":"10","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Landingpage/TopNav/TopNav.js":"11","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Landingpage/SearchBar/SearchBar.js":"12"},{"size":447,"mtime":1621028415920,"results":"13","hashOfConfig":"14"},{"size":875,"mtime":1621028415920,"results":"15","hashOfConfig":"14"},{"size":463,"mtime":1621028415920,"results":"16","hashOfConfig":"14"},{"size":1484,"mtime":1621359243530,"results":"17","hashOfConfig":"14"},{"size":968,"mtime":1621382720510,"results":"18","hashOfConfig":"14"},{"size":2601,"mtime":1621359243530,"results":"19","hashOfConfig":"14"},{"size":1872,"mtime":1621028415920,"results":"20","hashOfConfig":"14"},{"size":5062,"mtime":1621382720510,"results":"21","hashOfConfig":"14"},{"size":5172,"mtime":1621382720510,"results":"22","hashOfConfig":"14"},{"size":622,"mtime":1621028415920,"results":"23","hashOfConfig":"14"},{"size":1466,"mtime":1621028415920,"results":"24","hashOfConfig":"14"},{"size":6352,"mtime":1621382720510,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17s7t8p",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/index.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/App.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/PrivateRoute.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/contexts/AuthContext.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Landingpage/LandingPage.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/SignUp/SignUp.js",["52","53"],"import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Alert, Container } from \"react-bootstrap\";\r\nimport TopNav from \"../Landingpage/TopNav/TopNav\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport firebase from '../firebaseDB/firebase';\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const { signup, currentUser } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await signup(emailRef.current.value, passwordRef.current.value)\r\n      history.push(\"/\");\r\n    } catch {\r\n      setError(\"Failed to sign up\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TopNav></TopNav>\r\n      <Container className=\"mt-5\">\r\n        <Card>\r\n          <Card.Body>\r\n            <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group id=\"username\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control id=\"username\"></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group id=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" ref={emailRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" ref={passwordRef} required />\r\n              </Form.Group>\r\n              <Form.Group id=\"password-confirm\">\r\n                <Form.Label>Password Confirmation</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  ref={passwordConfirmRef}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                Sign Up\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Already have an account? <Link to=\"/login\">Login</Link>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Login/Login.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Search/Search.js",["54"],"import React, { useState, useLayoutEffect, useEffect } from \"react\";\r\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport TopNav from \"../Landingpage/TopNav/TopNav\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport axios from \"axios\";\r\nimport firebase from \"../firebaseDB/firebase\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport \"./Search.css\";\r\n\r\nfunction Search() {\r\n  let location1 = useLocation();\r\n  //this is the infomation the people seach. I got the variables for you to use it anywhere you want\r\n  const params = new URLSearchParams(location1.search);\r\n  const term = params.get(\"find_desc\");\r\n  const location = params.get(\"find_loc\");\r\n  const price = params.get(\"price\");\r\n  const [places, setPlaces] = useState([]);\r\n  const [randomPlace, setRandomPlace] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const db = firebase.firestore();\r\n  const { currentUser } = useAuth();\r\n  const [review, setReview] = useState(\"\");\r\n\r\n  const getReview = async () => {\r\n    const review = async () => {\r\n      await axios\r\n        .get(`http://localhost:5000/v3/businesses/${randomPlace.id}`)\r\n        .then(({ data }) => setReview(data.reviews))\r\n        .catch((err) => console.log(err));\r\n    };\r\n    review();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(false);\r\n    const getData = async () => {\r\n      await axios\r\n        .get(\r\n          `http://localhost:5000/v3/businesses/search?term=${term}&location=${location}&price=${price}`\r\n        )\r\n        .then(({ data }) => setPlaces(data))\r\n        .catch((err) => console.log(err));\r\n    };\r\n    getData();\r\n  }, [location, term, price]);\r\n\r\n  useLayoutEffect(() => {\r\n    const chooseRandom = async () => {\r\n      setIsLoading(false);\r\n      const len = places.length;\r\n      const number = Math.floor(Math.random() * len);\r\n      setRandomPlace(places[number]);\r\n      setIsLoading(true);\r\n    };\r\n    setIsLoading(false);\r\n    chooseRandom();\r\n    setIsLoading(true);\r\n  }, [places]);\r\n  ///end here\r\n\r\n  const updateFirestore = () => {\r\n    console.log(\"random place23\", randomPlace);\r\n    db.collection(\"users\")\r\n      .doc(currentUser.uid)\r\n      .update({\r\n        restaurants: firebase.firestore.FieldValue.arrayUnion(randomPlace),\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <div>\r\n          <TopNav />\r\n          <Container fluid>\r\n            <Row>\r\n              <Col>\r\n                <h1>{randomPlace.name}</h1>\r\n              </Col>\r\n            </Row>\r\n            <Row className=\"mt-5 justify-content-md-center\">\r\n              <Col xs={{ span: 3, offset: 1 }}>\r\n                <img\r\n                  className=\"image\"\r\n                  src={randomPlace.image_url}\r\n                  alt={randomPlace.name}\r\n                  width={300}\r\n                  height={300}\r\n                ></img>\r\n              </Col>\r\n              <Col xs={6} className=\"description ml-5\">\r\n                <ReactStars\r\n                  count={5}\r\n                  value={randomPlace.rating}\r\n                  size={30}\r\n                  edit={false}\r\n                  activeColor=\"#ffd700\"\r\n                />\r\n\r\n                <h2>Description</h2>\r\n                <span>\r\n                  Mauris a laoreet congue luctus. Ut condimentum magna id risus\r\n                  iaculis, ac mollis turpis ultrices. Sed facilisis dui neque,\r\n                  malesuada dictum enim malesuada non. Cras congue auctor libero\r\n                  et imperdiet. Vestibulum interdum arcu est. Aliquam ultricies\r\n                  accumsan arcu id hendrerit. Fusce cursus, urna vel pulvinar\r\n                  ullamcorper, augue lorem varius diam, ut varius erat sapien at\r\n                  odio. Sed bibendum ante et ullamcorper hendrerit. Vestibulum\r\n                </span>\r\n              </Col>\r\n              <Col></Col>\r\n            </Row>\r\n            <Row className=\"mt-5 justify-content-md-center\">\r\n              <Col xs={{ offset: 6 }}>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  size=\"lg\"\r\n                  type=\"submit\"\r\n                  onClick={() => window.location.reload()}\r\n                >\r\n                  Reroll\r\n                </Button>\r\n                <Button\r\n                  className=\"pick-btn\"\r\n                  variant=\"primary\"\r\n                  size=\"lg\"\r\n                  type=\"submit\"\r\n                  onClick={() => updateFirestore()}\r\n                >\r\n                  Try This Place!\r\n                </Button>\r\n                <Button\r\n                  className=\"pick-btn\"\r\n                  variant=\"primary\"\r\n                  size=\"lg\"\r\n                  type=\"button\"\r\n                  onClick={() => getReview()}\r\n                >\r\n                  Reviews\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      ) : (\r\n        \"Is Loading\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/ProfilePage/ProfilePage.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/firebaseDB/firebase.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Landingpage/TopNav/TopNav.js",[],"/home/mictran/LetsEatWeb/CS-465P-FullStack/lets-eat/client/src/Landingpage/SearchBar/SearchBar.js",[],{"ruleId":"55","severity":1,"message":"56","line":6,"column":8,"nodeType":"57","messageId":"58","endLine":6,"endColumn":16},{"ruleId":"55","severity":1,"message":"59","line":12,"column":19,"nodeType":"57","messageId":"58","endLine":12,"endColumn":30},{"ruleId":"55","severity":1,"message":"60","line":23,"column":10,"nodeType":"57","messageId":"58","endLine":23,"endColumn":16},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","'currentUser' is assigned a value but never used.","'review' is assigned a value but never used."]