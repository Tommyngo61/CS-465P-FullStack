{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rioki\\\\Documents\\\\full-stack\\\\CS-465P-FullStack\\\\lets-eat\\\\client\\\\src\\\\Search\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TopNav from \"../Landingpage/TopNav/TopNav\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  let location1 = useLocation(); //this is the infomation the people seach. I got the variables for you to use it anywhere you want\n\n  const [term, setTerm] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [check, setCheck] = useState(\"\"); //   const [places, setPlaces] = useState(\"\");\n\n  const getParams = async () => {\n    const params = new URLSearchParams(location1.search);\n    setTerm(params.get(\"find_desc\"));\n    setLocation(params.get(\"find_loc\"));\n    setCheck(params.get(\"price\"));\n    getData();\n  };\n\n  const getData = async () => {\n    await axios.get( //   `http://localhost:5000/v3/businesses/search?term=${term}&location=${location}${\n    //     check ? `$price=${check}` : \"\"\n    //   }`\n    `http://localhost:5000/v3/businesses/search?term=${term}&location=${location}`).then(({\n      data\n    }) => console.log(data)).catch(err => console.log(err));\n  }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  ///end here\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [term, \" \", location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Search, \"3tOHGUEs1/zHk06eF9pTgJuKpyE=\", false, function () {\n  return [useLocation];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/rioki/Documents/full-stack/CS-465P-FullStack/lets-eat/client/src/Search/Search.js"],"names":["React","useState","useEffect","TopNav","useLocation","axios","Search","location1","term","setTerm","location","setLocation","check","setCheck","getParams","params","URLSearchParams","search","get","getData","then","data","console","log","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AACA,SAASC,MAAT,GAAkB;AAAA;;AAChB,MAAIC,SAAS,GAAGH,WAAW,EAA3B,CADgB,CAEhB;;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC,CALgB,CAMhB;;AACA,QAAMa,SAAS,GAAG,YAAY;AAC5B,UAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoBT,SAAS,CAACU,MAA9B,CAAf;AACAR,IAAAA,OAAO,CAACM,MAAM,CAACG,GAAP,CAAW,WAAX,CAAD,CAAP;AACAP,IAAAA,WAAW,CAACI,MAAM,CAACG,GAAP,CAAW,UAAX,CAAD,CAAX;AACAL,IAAAA,QAAQ,CAACE,MAAM,CAACG,GAAP,CAAW,OAAX,CAAD,CAAR;AACAC,IAAAA,OAAO;AACR,GAND;;AAOA,QAAMA,OAAO,GAAG,YAAY;AAC1B,UAAMd,KAAK,CACRa,GADG,EAEF;AACA;AACA;AACC,uDAAkDV,IAAK,aAAYE,QAAS,EAL3E,EAOHU,IAPG,CAOE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAcC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAPhB,EAQHG,KARG,CAQIC,GAAD,IAASH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CARZ,CAAN;AASD,GAVD,CAdgB,CA0BhB;AAEA;;;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACGjB,IADH,OACUE,QADV;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAcD;;GA3CQJ,M;UACSF,W;;;KADTE,M;AA6CT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TopNav from \"../Landingpage/TopNav/TopNav\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nfunction Search() {\r\n  let location1 = useLocation();\r\n  //this is the infomation the people seach. I got the variables for you to use it anywhere you want\r\n  const [term, setTerm] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [check, setCheck] = useState(\"\");\r\n  //   const [places, setPlaces] = useState(\"\");\r\n  const getParams = async () => {\r\n    const params = new URLSearchParams(location1.search);\r\n    setTerm(params.get(\"find_desc\"));\r\n    setLocation(params.get(\"find_loc\"));\r\n    setCheck(params.get(\"price\"));\r\n    getData();\r\n  };\r\n  const getData = async () => {\r\n    await axios\r\n      .get(\r\n        //   `http://localhost:5000/v3/businesses/search?term=${term}&location=${location}${\r\n        //     check ? `$price=${check}` : \"\"\r\n        //   }`\r\n        `http://localhost:5000/v3/businesses/search?term=${term}&location=${location}`\r\n      )\r\n      .then(({ data }) => console.log(data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n\r\n  ///end here\r\n  return (\r\n    <>\r\n      <TopNav />\r\n      <h1>\r\n        {term} {location}\r\n      </h1>\r\n\r\n      {/* <ul>\r\n        {places.map((place) => {\r\n          return <li key={place.id}>{place.name}</li>;\r\n        })}\r\n      </ul> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}