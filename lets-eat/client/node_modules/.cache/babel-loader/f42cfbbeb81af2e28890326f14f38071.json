{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rioki\\\\Documents\\\\full-stack\\\\CS-465P-FullStack\\\\lets-eat\\\\client\\\\src\\\\Search\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TopNav from \"../Landingpage/TopNav/TopNav\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  let location1 = useLocation(); //this is the infomation the people seach. I got the variables for you to use it anywhere you want\n\n  const [term, setTerm] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [places, setPlaces] = useState(\"\");\n  useEffect(() => {\n    const params = new URLSearchParams(location1.search);\n    setTerm(params.get(\"find_desc\"));\n    setLocation(params.get(\"find_loc\"));\n\n    const getData = () => {\n      axios.get(`http://localhost:5000/v3/businesses/search?term=${term}&location=${location}`).then(({\n        data\n      }) => setPlaces(data)).catch(err => console.log(err));\n    };\n\n    getData();\n    console.log(places);\n  }, [location1.search, location, term]); ///end here\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [term, \" \", location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Search, \"lzdZh3NZGurPMIHVvGWesyJjNp0=\", false, function () {\n  return [useLocation];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/rioki/Documents/full-stack/CS-465P-FullStack/lets-eat/client/src/Search/Search.js"],"names":["React","useState","useEffect","TopNav","useLocation","axios","Search","location1","term","setTerm","location","setLocation","places","setPlaces","params","URLSearchParams","search","get","getData","then","data","catch","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AACA,SAASC,MAAT,GAAkB;AAAA;;AAChB,MAAIC,SAAS,GAAGH,WAAW,EAA3B,CADgB,CAEhB;;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,MAAM,GAAG,IAAIC,eAAJ,CAAoBR,SAAS,CAACS,MAA9B,CAAf;AACAP,IAAAA,OAAO,CAACK,MAAM,CAACG,GAAP,CAAW,WAAX,CAAD,CAAP;AACAN,IAAAA,WAAW,CAACG,MAAM,CAACG,GAAP,CAAW,UAAX,CAAD,CAAX;;AACA,UAAMC,OAAO,GAAG,MAAM;AACpBb,MAAAA,KAAK,CACFY,GADH,CAEK,mDAAkDT,IAAK,aAAYE,QAAS,EAFjF,EAIGS,IAJH,CAIQ,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcP,SAAS,CAACO,IAAD,CAJ/B,EAKGC,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMD,KAPD;;AAQAJ,IAAAA,OAAO;AACPK,IAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACD,GAdQ,EAcN,CAACL,SAAS,CAACS,MAAX,EAAmBN,QAAnB,EAA6BF,IAA7B,CAdM,CAAT,CANgB,CAsBhB;;AACA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,iBACGA,IADH,OACUE,QADV;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAQD;;GA/BQJ,M;UACSF,W;;;KADTE,M;AAiCT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport TopNav from \"../Landingpage/TopNav/TopNav\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nfunction Search() {\r\n  let location1 = useLocation();\r\n  //this is the infomation the people seach. I got the variables for you to use it anywhere you want\r\n  const [term, setTerm] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [places, setPlaces] = useState(\"\");\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location1.search);\r\n    setTerm(params.get(\"find_desc\"));\r\n    setLocation(params.get(\"find_loc\"));\r\n    const getData = () => {\r\n      axios\r\n        .get(\r\n          `http://localhost:5000/v3/businesses/search?term=${term}&location=${location}`\r\n        )\r\n        .then(({ data }) => setPlaces(data))\r\n        .catch((err) => console.log(err));\r\n    };\r\n    getData();\r\n    console.log(places);\r\n  }, [location1.search, location, term]);\r\n\r\n  ///end here\r\n  return (\r\n    <>\r\n      <TopNav />\r\n      <h1>\r\n        {term} {location}\r\n      </h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}